#include <cmath> 
#include <cstdio>
 #include <vector> 
#include <iostream> #include <algorithm> 
using namespace std;
int partition(int arr[], int lowerbound, int upperbound)
{
int pivot = arr[lowerbound];
    int start = lowerbound;
int end = upperbound;
while (start < end)
{
while (arr[start] <= pivot)
{
start++;
}
while (arr[end] > pivot)
{
end--;
}
if (start < end)
{
swap(arr[start], arr[end]);
}
}
swap(arr[lowerbound], arr[end]);
    return end;
}
void quicksort(int arr[], int lowerbound, int upperbound)
{
 
if (lowerbound < upperbound)
{
int loc = partition(arr, lowerbound, upperbound);
    cout << lowerbound << " " << loc-1 << endl; quicksort(arr, lowerbound, loc-1);
cout << loc+1 << " " << upperbound << endl; quicksort(arr, loc+1, upperbound);
}
}
int main()
{
int n; cin >> n;
int arr[n];
for (int i = 0; i < n; i++)
{
cin >> arr[i];
}
quicksort(arr, 0, n-1); 
    cout << arr[0];
for (int i = 1; i < n; i++)
{
cout << " " << arr[i];
}
return 0;
}
